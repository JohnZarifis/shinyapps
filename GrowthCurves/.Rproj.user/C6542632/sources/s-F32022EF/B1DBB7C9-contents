library("RODBC")
library("ggplot2")
library("plotly")
library(mlr)
library(dplyr)
library(gamlss)

dbhandle <- odbcDriverConnect("driver={SQL Server Native Client 11.0};server= 10.1.1.120;Database=AquaGrowth3;Uid=sa;Pwd=1q2w3e!Q@W#E")

Sampling <- sqlQuery(dbhandle, "SELECT 
                      P.Designation AS REGION
                     ,D.[CageLotID]
                     ,[CLTranTransDate] AS TRANSACTIONDATE
                     ,convert(varchar(8),CLTranTransDate,112) AS DATEKEY
                     ,[TransactionMAB] AS AvgWeight
                     ,G.PopulationDate
                     ,DATEDIFF(day,G.PopulationDate,CLTranTransDate) as Age
                     ,YEAR(PopulationDate) ORIGINYEAR
                     ,MONTH(PopulationDate) ORIGINMONTH
                     ,S.Designation as SPECIE
                     ,L.Designation as LOT
                     ,R.Designation AS GRADING
                     ,H.Designation as HATCHERY
                     ,L.MAB AS LotStartAvgWeight
                     ,'Sampling' as TypeOfMeasure
                     FROM [Aquagrowth3].[dbo].[CLTransDetails] D
                     inner join [Aquagrowth3].[dbo].CageLot G
                     on G.CageLotID = D.CageLotID
                     inner join [Aquagrowth3].[dbo].LOT L
                     on L.LotID = G.LotID
                     inner join [Aquagrowth3].[dbo].Species S
                     on S.SpeciesID = L.SpeciesID
                     inner join [Aquagrowth3].[dbo].GradingCategory R
                     on R.GradingID = G.CageLotGradingID
                     INNER JOIN [Aquagrowth3].[dbo].[HATCHERY] H
                     ON H.HatcheryID = L.HatcheryID
                     INNER JOIN [Aquagrowth3].[dbo].[CAGE] C
                     ON C.CAGEID = G.CAGEID
                     INNER JOIN [Aquagrowth3].[dbo].[Site] ST
                     ON ST.SiteID = C.SiteID
                     INNER JOIN [Aquagrowth3].[dbo].[SiteGroup] P
                     ON P.SiteGroupID = ST.SiteGroupID
                     where CLTranTransKindID = 4 
                     and IsVirtualSampling = 0 
                     and PopulationDate > '2013-12-31'
                     and YEAR(L.PurchaseDate) > 2013")
odbcClose(dbhandle)


View(Sampling)
str(Sampling)
summary(Sampling)


SamplingTsipoyra <- Sampling[Sampling$SPECIE %in% c("ΤΣΙΠΟΥΡΑ") 
                             & Sampling$GRADING == 'Α' & Sampling$AvgWeight < 400 & Sampling$ORIGINMONTH == 6,]

SamplingRegr <- select(SamplingTsipoyra,c("LotStartAvgWeight","REGION","Age","AvgWeight","ORIGINMONTH","ORIGINYEAR"))


regr.task = makeRegrTask(id = "bh", data = SamplingRegr, target = "AvgWeight")
regr.task

#regr.lrn = makeLearner("regr.gbm", par.vals = list(n.trees = 500, interaction.depth = 3))
regr.lrn = makeLearner("regr.glmnet")
#regr.lrn = makeLearner("regr.svm")
#regr.lrn = makeLearner("regr.nnet",par.vals = list(size=5))

mod = train(regr.lrn, regr.task)
mod


#n = getTaskSize(bh.task)
#train.set = seq(1, n, by = 2)
#test.set = seq(2, n, by = 2)
#lrn = makeLearner("regr.gbm", n.trees = 100)
#mod = train(lrn, bh.task, subset = train.set)

task.pred = predict(mod, task = regr.task)
task.pred


testOutput <- cbind(SamplingTsipoyra,task.pred$data)

ggplot(testOutput,aes(AvgWeight,response)) + geom_point() +
  geom_abline(slope = 1)


plotLearnerPrediction(regr.lrn,features = "Age",  task = regr.task)

performance(task.pred)

rdesc = makeResampleDesc("Subsample", iters = 5)

r = resample(regr.lrn, regr.task, rdesc, measures = list(mse, medse,mae, timetrain))

View(r$pred$data)



r = resample("regr.rpart", regr.task, rdesc, show.info = FALSE, extract = getFeatureImportance)
#> Resampling: cross-validation
#> Measures:             mse
r$extract



p <- ggplot(SamplingTsipoyra,aes(Age,AvgWeight))  + geom_point()
p <- p + coord_equal() + geom_smooth()
p

##################################################


SamplingCommon <- Sampling[Sampling$SpecieName %in% c("ΤΣΙΠΟΥΡΑ","ΛΑΒΡΑΚΙ"),]
SamplingTsipoyra <- Sampling[Sampling$SpecieName %in% c("ΤΣΙΠΟΥΡΑ") & Sampling$GRADING == 'Α' 
                             & Sampling$AvgWeight < 400 ,]

 p <- ggplot(SamplingTsipoyra,aes(Age,AvgWeight)) 
 p <- p + geom_point() + stat_quantile(quantiles = c(0.10,0.20, 0.5, 0.80,0.90),method = "gam")  
 p <- p + geom_smooth(aes(color = as.factor(ORIGINMONTH)))  + stat_quantile(quantiles = c(0.10,0.20, 0.5, 0.80,0.90))                          # geom_smooth(method = "lm") 
 p
 
 ggplotly(p)
 
 
 
summary(SamplingTsipoyra)


SamplingTsipoyra$FactMonth <- as.factor(SamplingTsipoyra$ORIGINMONTH)

SamplingTsipoyra$GPD <-  SamplingTsipoyra$TransactionMAB/SamplingTsipoyra$Age
Sampling$GPD <-  Sampling$TransactionMAB/Sampling$Age

SamplingCleared <- Sampling[Sampling$GPD < 5,]

ggplot(SamplingTsipoyra,aes(as.factor(SamplingTsipoyra$ORIGINMONTH),GPD )) + geom_boxplot()
ggplot(SamplingTsipoyra,aes(as.factor(SamplingTsipoyra$ORIGINYEAR),GPD )) + geom_boxplot()




ggplot(SamplingCleared,aes(GRADING,GPD )) + geom_boxplot()  + facet_grid(. ~ ORIGINYEAR)


ggplot(SamplingCleared, aes( x = GPD ,  fill = as.factor(ORIGINYEAR) )) + geom_density()
#ggplot(dat, aes(x=rating, fill=cond)) + geom_density(alpha=.3)








#+ stat_quantile(quantiles = c(0.25, 0.5, 0.75), formula = y ~ log(x),
#                method = "rq")




summary(Sampling)
SamplingCommon



 t <- lms(AvgWeight,Age , data= SamplingTsipoyra , n.cyc=50 ,trans.x=TRUE)
 
 
 View(t$y)

SamplingTsipoyra$predicted <- predict(gamlss(formula=AvgWeight~Age  ,family=NO,data=SamplingTsipoyra))
ggplot(SamplingTsipoyra,aes(AvgWeight,Age))+geom_point()+geom_smooth(aes(y=predicted), stat="identity")

ggplot(SamplingTsipoyra,aes(AvgWeight,Age))+geom_point()+ geom_point(aes(y=predicted, color = "red"), stat="identity")




#data(abdom)
#mod<-gamlss(y~pb(x),sigma.fo=~pb(x),family=BCT, data=abdom, method=mixed(1,20))

pred <- gamlss(formula=AvgWeight~Age  ,family=NO,data=SamplingTsipoyra)
pred2 <- gamlss(AvgWeight~pb(Age)  ,sigma.fo=~pb(Age),data=SamplingTsipoyra, method=mixed(20,50), n.cyc=50 ,trans.x=TRUE)
pred3 <- gamlss(AvgWeight~lo(~Age,span=0.01)+LotStartAvgWeight ,data=SamplingTsipoyra,trans.x=TRUE) # 
aids1 <- gamlss(y~lo(~x,span=0.4)+qrt,data=aids,family=PO)


SamplingTsipoyra$predicted2 <- predict(pred)
SamplingTsipoyra$predicted3 <- predict(pred3)

plot(SamplingTsipoyra$predicted2)

ggplot(SamplingTsipoyra,aes(AvgWeight,Age))+geom_point()+ geom_point(aes(y=predicted3, color = "red"), stat="identity")


plot(pred3)
centiles(pred3,SamplingTsipoyra$Age)

plot(mod)
rm(mod)



# fitting a loess curve with span=0.4 plus the a quarterly  effect 
aids1<-gamlss(y~lo(~x,span=0.4)+qrt,data=aids,family=PO) # 
term.plot(aids1, page=1)
## Not run: 
r1 <- gamlss(R~lo(~Fl)+lo(~A), data=rent, family=GA)
term.plot(r1, pages=1)
vis.lo(getSmo(r1, which=1), partial=T)
r2 <- gamlss(R~lo(~Fl+A), data=rent, family=GA)
term.plot(r2, pages=1)
vis.lo(getSmo(r2, which=1))
vis.lo(getSmo(r2, which=1), se=1.97)
vis.lo(getSmo(r2, which=1), partial.res=T)


View(aids)









#########################################
## bring the data and fit the model
#data(abdom)
a <- gamlss(formula=AvgWeight~Age  ,family=BCT,data=SamplingTsipoyra)
#a <- gamlss(y~pb(x),sigma.fo=~pb(x), data=abdom, family=BCT)
a <- gamlss(AvgWeight~pb(Age) ,sigma.fo=~pb(Age),data=SamplingTsipoyra , family=BCT, method=mixed(5,20))
a <- gamlss(AvgWeight~pb(Age) ,sigma.fo=~pb(Age),data=SamplingTsipoyra , family=BCT)
a <- gamlss(AvgWeight~lo(~Age), data=SamplingTsipoyra, family=GA)
## plot the centiles
centiles(a,xvar=SamplingTsipoyra$Age)
# or 
with(SamplingTsipoyra
     ,centiles(a,Age)
     )

newx<-seq(1,500,1)
mat <- centiles.pred(a, xname="Age", xvalues=newx )
mat

mat2 <- centiles.pred(a, xname="Age", xvalues=newx , cent = c(1,5,95,99))
## now plot the centile curves  
mat <- centiles.pred(a, xname="Age",xvalues=newx, plot=TRUE )

ggplot()+
  geom_point(data = SamplingTsipoyra,aes(Age,AvgWeight),
             colour = ifelse( SamplingTsipoyra$AvgWeight > mat$C90,"red","blue") )+
  geom_line(data = mat,aes(Age,C90),colour = "red",size=1) +
  geom_line(data = mat,aes(Age,C10),colour = "red",size=1)




#################################### example ###################################
data(abdom)
h<-gamlss(y~pb(x), sigma.formula=~pb(x), family=BCT, data=abdom) 
# default plot
ttt<- centiles(h,xvar=abdom$x, save = TRUE  )
# control of colours and lines
centiles(h, xvar=abdom$x,  col.cent=c(2,3,4,5,1,5,4,3,2,1), 
         lwd.cent=c(1,1,1,1,2,1,1,1,1))
#Control line types
centiles(h, xvar=abdom$x,  col.cent=1, cent=c(.5,2.5,50,97.5,99.5), 
         lty.centiles=c(3,2,1,2,3),lwd.cent=c(1,1,2,1,1))
# control of the main title
centiles(h, xvar=abdom$x,  main="Abdominal data \n @")
# the fan-chart
centiles.fan(h,xvar=abdom$x, colors="rainbow")
rm(h)









# outliers !!!!!
newx<-seq(1,500,1)
#mat <- centiles.pred(a, xname="Age", xvalues= unique(SamplingTsipoyra$Age) )
#matToCbind <- centiles.pred(a, xname="Age", xvalues= SamplingTsipoyra$Age )
mat


testJoinData <- inner_join(SamplingTsipoyra,mat)


ggplot(data = testJoinData)+
  geom_point(aes(Age,AvgWeight),
             colour = ifelse( testJoinData$AvgWeight > testJoinData$C98 |testJoinData$AvgWeight < testJoinData$C2 ,"red","blue"),
             shape = ifelse( testJoinData$LOT == "208_ΤΣ_0616_49" ,8,16)) +
  geom_line(aes(Age,C98),colour = "red",size=1, stat="identity") +
  geom_line(aes(Age,C90),colour = "orange",size=1, stat="identity") +
  geom_line(aes(Age,C75),colour = "orange",size=1, stat="identity") +
  geom_line(aes(Age,C50),colour = "green",size=1.5, stat="identity") +
  geom_line(aes(Age,C25),colour = "orange",size=1, stat="identity") +
  geom_line(aes(Age,C10),colour = "orange",size=1, stat="identity") +
  geom_line(aes(Age,C2),colour = "red",size=1, stat="identity") +
  geom_smooth(aes(Age,AvgWeight)) 
  


summary(SamplingTsipoyra)


ggplot(data = testJoinData)+
  geom_point(aes(Age,AvgWeight),
             colour = ifelse(testJoinData$LOT == "208_ΤΣ_0616_49","red","blue"),
             shape = ifelse( testJoinData$LOT == "208_ΤΣ_0616_49" ,8,16)) +
  geom_line(aes(Age,C98),colour = "red",size=1, stat="identity") +
  geom_line(aes(Age,C90),colour = "orange",size=1, stat="identity") +
  geom_line(aes(Age,C75),colour = "orange",size=1, stat="identity") +
  geom_line(aes(Age,C50),colour = "green",size=1.5, stat="identity") +
  geom_line(aes(Age,C25),colour = "orange",size=1, stat="identity") +
  geom_line(aes(Age,C10),colour = "orange",size=1, stat="identity") +
  geom_line(aes(Age,C2),colour = "red",size=1, stat="identity") +
  geom_smooth(aes(Age,AvgWeight)) 





